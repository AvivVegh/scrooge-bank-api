version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: scrooge-bank-api-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: scrooge_bank
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    networks:
      - scrooge-bank-network-dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: scrooge-bank-api-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data_dev:/data
    networks:
      - scrooge-bank-network-dev
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # NestJS Application (Development)
  # app:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   restart: unless-stopped
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     NODE_ENV: development
  #     DATABASE_HOST: postgres
  #     DATABASE_PORT: 5432
  #     DATABASE_NAME: nestjs_template_dev
  #     DATABASE_USER: postgres
  #     DATABASE_PASSWORD: postgres
  #     REDIS_HOST: redis
  #     REDIS_PORT: 6379
  #   volumes:
  #     - .:/usr/src/app
  #     - /usr/src/app/node_modules
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #   networks:
  #     - nestjs-network-dev
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3
  #     start_period: 40s

volumes:
  postgres_data_dev:
    driver: local
  redis_data_dev:
    driver: local

networks:
  scrooge-bank-network-dev:
    driver: bridge
