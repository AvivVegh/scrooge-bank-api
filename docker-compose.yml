version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: scrooge-bank-api-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: scrooge_bank
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    networks:
      - scrooge-bank-network-dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: scrooge-bank-api-app
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      NODE_ENV: development
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_NAME: scrooge_bank
      DATABASE_USER: postgres
      DATABASE_PASSWORD: postgres
      BANK_BASE_CASH_AMOUNT: 250000
      JWT_ACCESS_SECRET: supersecret
      JWT_ACCESS_TOKEN_EXPIRATION_TIME: 15m
      PORT: 3000

    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      postgres:
        condition: service_healthy

    networks:
      - scrooge-bank-network-dev
    command: >
      sh -c "npm run migration:run && npm run seed:bank && npm run start"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data_dev:
    driver: local


networks:
  scrooge-bank-network-dev:
    driver: bridge
